{"version":3,"sources":["webpack://webpack-starter/./src/scripts/services/Services.js","webpack://webpack-starter/./src/scripts/index.js","webpack://webpack-starter/./src/scripts/store/Store.js","webpack://webpack-starter/./src/scripts/views/Table.js","webpack://webpack-starter/./src/scripts/views/Preloader.js","webpack://webpack-starter/webpack/bootstrap","webpack://webpack-starter/webpack/runtime/global","webpack://webpack-starter/webpack/runtime/hasOwnProperty shorthand","webpack://webpack-starter/webpack/runtime/jsonp chunk loading","webpack://webpack-starter/webpack/startup"],"names":["url","fetch","res","json","Error","status","getResource","urlPeople","urlComments","urlPosts","this","store","services","Promise","all","api","getAllPeoples","getAllComments","getAllPosts","response","peoples","comments","posts","serializePeoples","serializeComments","serializePosts","normalisePost","map","forEach","post","comment","id","postId","normalisePerson","person","userId","el","name","reduce","acc","push","table","arr","mainTable","createMainTable","body","appendChild","document","createElement","classList","add","tHead","createTHead","tBody","createTBody","insertAdjacentHTML","tData","createData","tName","inputName","tPost","intupPost","tComment","inputCommentsLength","inputData","join","title","length","querySelector","preloader","initApp","init","updateTable","querySelectorAll","promise","addEventListener","innerHTML","preloaderInit","then","remove","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","m","g","globalThis","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","installedChunks","143","deferredModules","checkDeferredModules","checkDeferredModulesImpl","result","i","deferredModule","fulfilled","j","depId","splice","s","x","chunkLoadingGlobal","slice","webpackJsonpCallback","data","chunkId","chunkIds","moreModules","runtime","executeModules","resolves","parentChunkLoadingFunction","shift","apply","self","bind"],"mappings":"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","file":"js/app.3293b3a9.js","sourcesContent":["class Services {\r\n  constructor () {\r\n    this.urlPeople = `https://jsonplaceholder.typicode.com/users`;\r\n    this.urlComments = `https://jsonplaceholder.typicode.com/comments`;\r\n    this.urlPosts = `https://jsonplaceholder.typicode.com/posts`;   \r\n  }\r\n\r\n  getResource = async (url) => {\r\n    try {\r\n      const res = await fetch(`${url}`);\r\n      return await res.json();\r\n    } catch {\r\n      throw new Error(`Ошибка загрузки ${url}, статус соединения ${res.status}.`); \r\n    }\r\n  }\r\n\r\n  getAllPeoples = async () => {\r\n    const res = await this.getResource(this.urlPeople);    \r\n    return res;\r\n  }\r\n\r\n  getAllComments = async () => {\r\n    const res = await this.getResource(this.urlComments);    \r\n    return res;\r\n  }\r\n\r\n  getAllPosts = async () => {\r\n    const res = await this.getResource(this.urlPosts);\r\n    return res;\r\n  }\r\n}\r\n\r\nconst services = new Services();\r\nexport default services;","import '../styles/index.scss';\r\nimport services from  './services/Services';\r\nimport Store from './store/Store.js';\r\nimport Table from './views/Table';\r\nimport Preloader from './views/Preloader';\r\n\r\nconst store = new Store(services);\r\nconst table = new Table();\r\nconst preloader = new Preloader();\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  initApp();\r\n});\r\n\r\nasync function initApp() {\r\n  await store.init();\r\n  table.init(store.normalisePerson);\r\n  const tComment = document.querySelectorAll(`.comment_td`);\r\n  updateTable(tComment, initApp);  \r\n}\r\n\r\nfunction updateTable (tComment, promise) {\r\n  tComment.forEach(el => {   \r\n    el.addEventListener('click', ()=> {\r\n      el.innerHTML = '';\r\n      el.innerHTML = preloader.preloaderInit();\r\n      promise()\r\n      .then(() => {\r\n        document.querySelector(`.main_table`).remove();    \r\n      });      \r\n    });\r\n  });\r\n}","export default class Store {\r\n  constructor(services) {\r\n    this.api = services;\r\n    this.peoples = null;\r\n    this.comments = null;\r\n    this.posts = null; \r\n    this.normalisePerson = null;   \r\n  }\r\n\r\n  init = async () => {\r\n    const response =  await Promise.all([\r\n      this.api.getAllPeoples(),\r\n      this.api.getAllComments(),\r\n      this.api.getAllPosts()\r\n    ]); \r\n    \r\n    const [ peoples, comments, posts ] = response; \r\n\r\n    this.peoples = this.serializePeoples(peoples);\r\n    this.comments = this.serializeComments(comments);\r\n    this.posts = this.serializePosts(posts);  \r\n  \r\n    const normalisePost = this.posts.map(posts => {\r\n      posts.forEach(post => {\r\n        this.comments.forEach((comments) => {      \r\n          comments.forEach(comment => {\r\n            if(post.id === comment.postId) {\r\n              post[`comment`] = comments;\r\n            }\r\n          });     \r\n        });\r\n      });\r\n      return posts;\r\n    });\r\n\r\n    this.normalisePerson = this.peoples.map(person => {\r\n      normalisePost.forEach(posts => {\r\n        posts.forEach(post => {\r\n          if(person.id === post.userId) {\r\n            person[`post`] = posts;           \r\n          }\r\n        });\r\n      });      \r\n      return person;\r\n    });  \r\n    return response;\r\n  } \r\n\r\n  serializePeoples = (peoples) => {\r\n    return peoples.map(el => {\r\n      el = {\r\n        name: el.name,\r\n        id: el.id\r\n      };      \r\n      return el;\r\n    });\r\n  }  \r\n\r\n  serializeComments = (comments) => {\r\n    return comments.reduce((acc, comment) => {\r\n      const {postId} = comment;\r\n      acc[postId] = (acc[postId] || []);\r\n      acc[postId].push(comment);      \r\n      return acc;\r\n    }, []);\r\n  }\r\n\r\n  serializePosts = (posts) => {\r\n    return posts.reduce((acc, post) => {\r\n      const { userId } = post;\r\n      acc[userId] = (acc[userId] || []);\r\n      acc[userId].push(post);\r\n      return acc;\r\n    }, []);\r\n  }  \r\n}","export default class Table {\r\n\r\n  constructor() {\r\n    this.body = document.querySelector('body');\r\n  } \r\n\r\n  init = arr => {\r\n    const mainTable = this.createMainTable(arr);    \r\n    this.body.appendChild(mainTable);   \r\n  }\r\n\r\n  createMainTable = (arr) => {    \r\n    const table = document.createElement('table');\r\n    table.classList.add('main_table');\r\n    const tHead = this.createTHead();  \r\n    const tBody = this.createTBody(arr);    \r\n    table.insertAdjacentHTML('afterbegin', tHead);\r\n    table.insertAdjacentHTML('beforeend', tBody);    \r\n    return table;\r\n  }\r\n\r\n  createTHead = () => {\r\n    const tHead = `\r\n      <thead>\r\n        <tr>\r\n          <td class='main_td'>Имя(автора)</td>\r\n          <td class='main_td'>Название(поста)</td>\r\n          <td class='main_td'>Количество(комментариев)</td>\r\n        </tr>\r\n      </thead>\r\n    `;\r\n    return tHead;\r\n  }\r\n\r\n  createTBody = (arr) => {\r\n    const tData = this.createData(arr);\r\n    const tBody = `\r\n      <tbody>\r\n        ${tData}\r\n      </tbody>    \r\n    `;\r\n    return tBody;\r\n  };\r\n\r\n  createData = arr => {\r\n    return arr.map(el => {     \r\n      const { name, post } = el;      \r\n      const tName = this.inputName(name);\r\n      const tPost = this.intupPost(post);\r\n      const tComment = this.inputCommentsLength(post);\r\n      return this.inputData(tName, tPost, tComment);\r\n    }).join('');\r\n  }\r\n\r\n  inputName = name => {\r\n    return ` <td class='main_td'>${name}</td>`;\r\n  }\r\n\r\n  intupPost = post => {\r\n    return post.map(post => {\r\n      return `\r\n        <tr>\r\n          <td>Пост: ${post.title}</td>\r\n        </tr>  \r\n      `;\r\n    }).join('');\r\n  }\r\n\r\n  inputCommentsLength = post => {\r\n    return post.map(post => {\r\n      return `\r\n        <tr>\r\n          <td class='comment_td'>${post.comment.length}</td>\r\n        </tr>  \r\n      `;\r\n    }).join('');\r\n  }\r\n\r\n  inputData = (name, post, comment) => {\r\n    return `\r\n      <tr>\r\n        ${name}\r\n        <td class='main_td'>\r\n          <table>\r\n            ${post}      \r\n          </table>\r\n        </td>\r\n        <td class='main_td'>\r\n          <table>\r\n            ${comment}      \r\n          </table>\r\n        </td>\r\n      </tr>\r\n    `;\r\n  }\r\n}","export default class Preloader {  \r\n\r\n  preloaderInit = () => {\r\n    return `\r\n      <div class=\"preloader-spinner-rolling\">\r\n        <div class=\"preloader\">\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// Promise = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\nvar deferredModules = [\n\t[9766,27]\n];\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\nvar checkDeferredModules = function() {\n\n};\nfunction checkDeferredModulesImpl() {\n\tvar result;\n\tfor(var i = 0; i < deferredModules.length; i++) {\n\t\tvar deferredModule = deferredModules[i];\n\t\tvar fulfilled = true;\n\t\tfor(var j = 1; j < deferredModule.length; j++) {\n\t\t\tvar depId = deferredModule[j];\n\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferredModules.splice(i--, 1);\n\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n\t\t}\n\t}\n\tif(deferredModules.length === 0) {\n\t\t__webpack_require__.x();\n\t\t__webpack_require__.x = function() {\n\n\t\t}\n\t}\n\treturn result;\n}\n__webpack_require__.x = function() {\n\t// reset startup function so it can be called again when more startup code is added\n\t__webpack_require__.x = function() {\n\n\t}\n\tchunkLoadingGlobal = chunkLoadingGlobal.slice();\n\tfor(var i = 0; i < chunkLoadingGlobal.length; i++) webpackJsonpCallback(chunkLoadingGlobal[i]);\n\treturn (checkDeferredModules = checkDeferredModulesImpl)();\n};\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tvar executeModules = data[3];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0, resolves = [];\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tresolves.push(installedChunks[chunkId][0]);\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tparentChunkLoadingFunction(data);\n\twhile(resolves.length) {\n\t\tresolves.shift()();\n\t}\n\n\t// add entry modules from loaded chunk to deferred list\n\tif(executeModules) deferredModules.push.apply(deferredModules, executeModules);\n\n\t// run deferred modules when all chunks ready\n\treturn checkDeferredModules();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwebpack_starter\"] = self[\"webpackChunkwebpack_starter\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = webpackJsonpCallback;","// run startup\nreturn __webpack_require__.x();\n"],"sourceRoot":""}